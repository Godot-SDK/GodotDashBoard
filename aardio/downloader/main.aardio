import fsys;
import inet.http
import inet.httpFile;
import console;

//test
//https://github.com/godotengine/godot/releases/download/3.2.3-stable/godot-lib.3.2.3.stable.release.aar
console.setTitle("downloader");
//console.dump(_ARGV)
var download_type = _ARGV[1]
var url = _ARGV[2]

console.dump(_ARGV)

console.log("正在下载")

function download()
{
    //console.dump(remote_file)
    var ok,err,errCode = remote_file.test()
	if(ok)
	{
		return console.logPause("文件已下载完成、服务器未更新,无需重新下载"); 
	}
	elseif(ok === null)
	{
		return console.logPause("下载错误,HTTP错误代码",remote_file.statusCode,err);
	}

import console.progress;
var progress = console.progress();
remote_file.onReceiveBegin = function(statusCode,contentLength,fileSize)
    {//断点续传
	if( statusCode == 206 ){
		progress.setProgress((fileSize/contentLength)*100,"正在断点续传") 
	}
	elseif(fileSize)
	{
		progress.setProgress((fileSize/contentLength)*100,"正在重新下载")  
	}
}

remote_file.onReceive = function(str,downSize,contentLength)
    {
	progress.addProgress((downSize/contentLength)*100
			,"正在下载 文件大小：" + math.size64(contentLength).format())   
}

//下载文件
var ok,err,fileSize = remote_file.download() 
console.log(ok,err,inet.lastResponse())

}

if(download_type == "aar")
{
	remote_file = inet.httpFile(url,"/aar/")
	//console.dump(remote_file)
	download()
}
if(download_type == "editor")
{
	remote_file = inet.httpFile(url,"/editor/")
	download()
}



